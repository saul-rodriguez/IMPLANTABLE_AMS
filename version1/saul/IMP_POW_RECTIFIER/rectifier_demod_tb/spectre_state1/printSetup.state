'(nil version 1.0 bBox ((429 233) (979 820)))
(unless printInfoDpl
printInfoDpl = (ncons nil)
)
(unless printInfoDpl->expTable
printInfoDpl->expTable = (ncons nil)
)
printInfoDpl->expTable->waves = (let
(tmp1 tmp2)
tmp1 = nil
tmp2 = nil
list(tmp1 tmp2)
)
printInfoDpl->expTable->origWaves = (let
(tmp1 tmp2)
tmp1 = nil
tmp2 = nil
list(tmp1 tmp2)
)
printInfoDpl->expTable->expressions = (let
(tmp1 tmp2)
tmp1 = "OP(\"I0.TP2.dsb\" \"??\")"
tmp2 = "OP(\"I0.TP2.ddb\" \"??\")"
list(tmp1 tmp2)
)
printInfoDpl->expTable->aliases = (let
(tmp1 tmp2)
tmp1 = "OP(\"I0.TP2.dsb\" \"??\")"
tmp2 = "OP(\"I0.TP2.ddb\" \"??\")"
list(tmp1 tmp2)
)
(unless printInfoDpl->optionDpl
printInfoDpl->optionDpl = (ncons nil)
)
printInfoDpl->optionDpl->format = 'suffix
printInfoDpl->optionDpl->numSigDigits = 4
printInfoDpl->optionDpl->linLog = "Linear"
printInfoDpl->optionDpl->from = nil
printInfoDpl->optionDpl->to = nil
printInfoDpl->optionDpl->step = nil
(unless printInfoDpl->printOptions
printInfoDpl->printOptions = (ncons nil)
)
printInfoDpl->printType = "simple wave"
printInfoDpl->origStrList = (let
(tmp1 tmp2 tmp3 tmp4 tmp5 tmp6 tmp7 tmp8 tmp9 tmp10 tmp11 tmp12 tmp13 tmp14)
tmp1 = "signal                       OP(\"I0.TP2.dsb\" \"??\")        OP(\"I0.TP2.ddb\" \"??\")    "
tmp2 = "cap                             36.55f                       21.92f                    "
tmp3 = "capp                             2.53f                      403.4a                     "
tmp4 = "cd                              39.08f                       22.32f                    "
tmp5 = "ctotal                          39.08f                       22.32f                    "
tmp6 = "gd                               1.509e-174                  63.33e-156                "
tmp7 = "i                             -657.2z                      -146.7z                     "
tmp8 = "pwr                            192.6y                       172.2z                     "
tmp9 = "qd                             -11.45a                      -30.19f                    "
tmp10 = "region                           1                            0                        "
tmp11 = "res                            662.6e171                     15.79e153                 "
tmp12 = "resp                         in                           in                           "
tmp13 = "v                             -293.1u                        -1.174                    "
tmp14 = "vdio                          -293.1u                        -1.174                    "
list(tmp1 tmp2 tmp3 tmp4 tmp5 tmp6 tmp7 tmp8 tmp9 tmp10 tmp11 tmp12 tmp13 tmp14)
)
printInfoDpl->title = nil
printInfoDpl->xCol = nil
printInfoDpl->width = 25
printInfoDpl->numSpaces = 4
printInfoDpl->noMerge = nil
printInfoDpl->resultsDir = nil
printInfoDpl->resultName = nil
printInfoDpl->unitList = (let
(tmp1 tmp2 tmp3)
tmp1 = ""
tmp2 = ""
tmp3 = ""
list(tmp1 tmp2 tmp3)
)
printInfoDpl->waveNameList = (let
(tmp1 tmp2 tmp3)
tmp1 = "signal"
tmp2 = "OP(\"I0.TP2.dsb\" \"??\")"
tmp3 = "OP(\"I0.TP2.ddb\" \"??\")"
list(tmp1 tmp2 tmp3)
)
(unless printInfoDpl->context
printInfoDpl->context = (ncons nil)
)
printInfoDpl->context->runObjFile = "runObjFile"
printInfoDpl->context->netlistDir = "/home/saul/Sim/rectifier_demod_tb/spectre/config/netlist"
printInfoDpl->context->relativeDir = "/home/saul/Sim/rectifier_demod_tb/spectre"
printInfoDpl->context->dataDir = "/home/saul/Sim/rectifier_demod_tb/spectre/config"
(unless printInfoDpl->context->cache
printInfoDpl->context->cache = (ncons nil)
)
(unless printInfoDpl->context->simData
printInfoDpl->context->simData = (ncons nil)
)
printInfoDpl->context->simData->drl = nil
(unless printInfoDpl->context->simData->instData
printInfoDpl->context->simData->instData = (ncons nil)
)
printInfoDpl->context->simData->dataDir = "/home/saul/Sim/rectifier_demod_tb/spectre/config"
printInfoDpl->context->simData->simulator = "spectre"
printInfoDpl->context->simData->aliasList = (let
(tmp1 tmp2 tmp3 tmp4 tmp5 tmp6)
tmp1 = (let
(tmp1 tmp2)
tmp1 = (let
(tmp1)
tmp1 = 'subckts
list(tmp1)
)
tmp2 = "subckts-info.subckts"
list(tmp1 tmp2)
)
tmp2 = (let
(tmp1 tmp2)
tmp1 = (let
(tmp1)
tmp1 = 'primitives
list(tmp1)
)
tmp2 = "primitives-info.primitives"
list(tmp1 tmp2)
)
tmp3 = (let
(tmp1 tmp2)
tmp1 = (let
(tmp1)
tmp1 = 'designParamVals
list(tmp1)
)
tmp2 = "designParamVals-info"
list(tmp1 tmp2)
)
tmp4 = (let
(tmp1 tmp2)
tmp1 = (let
(tmp1)
tmp1 = 'dcOpInfo
list(tmp1)
)
tmp2 = "dcOpInfo-info"
list(tmp1 tmp2)
)
tmp5 = (let
(tmp1 tmp2)
tmp1 = (let
(tmp1)
tmp1 = 'dcOp
list(tmp1)
)
tmp2 = "dcOp-dc"
list(tmp1 tmp2)
)
tmp6 = (let
(tmp1 tmp2)
tmp1 = (let
(tmp1)
tmp1 = 'variables
list(tmp1)
)
tmp2 = "variables"
list(tmp1 tmp2)
)
list(tmp1 tmp2 tmp3 tmp4 tmp5 tmp6)
)
printInfoDpl->context->simulator = nil
printInfoDpl->realExpList = nil
printInfoDpl->saveLoadFile = "/home/saul/projects/IMPLANTABLE_AMS/version1/saul/IMP_POW_RECTIFIER/rectifier_demod_tb/spectre_state1/printSetup.state"
